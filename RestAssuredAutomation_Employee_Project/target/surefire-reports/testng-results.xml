<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="23" passed="22">
  <reporter-output>
  </reporter-output>
  <suite name="restassuredtestsuite" duration-ms="18312" started-at="2019-07-22T09:48:51Z" finished-at="2019-07-22T09:49:09Z">
    <groups>
    </groups>
    <test name="EmpRestAssuretTEst" duration-ms="18312" started-at="2019-07-22T09:48:51Z" finished-at="2019-07-22T09:49:09Z">
      <class name="employeeApi_TestCases.TC005_Delete__EmpRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:employeeApi_TestCases.TC005_Delete__EmpRecord@96532d6]" name="setup" is-config="true" duration-ms="9" started-at="2019-07-22T09:49:07Z" finished-at="2019-07-22T09:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="deleteEmp()[pri:0, instance:employeeApi_TestCases.TC005_Delete__EmpRecord@96532d6]" name="deleteEmp" is-config="true" duration-ms="2136" started-at="2019-07-22T09:49:07Z" finished-at="2019-07-22T09:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmp -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:employeeApi_TestCases.TC005_Delete__EmpRecord@96532d6]" name="checkContentType" duration-ms="0" started-at="2019-07-22T09:49:09Z" finished-at="2019-07-22T09:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:employeeApi_TestCases.TC005_Delete__EmpRecord@96532d6]" name="checkResponseBody" duration-ms="0" started-at="2019-07-22T09:49:09Z" finished-at="2019-07-22T09:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:employeeApi_TestCases.TC005_Delete__EmpRecord@96532d6]" name="checkStatusCode" duration-ms="1" started-at="2019-07-22T09:49:09Z" finished-at="2019-07-22T09:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkserverType()[pri:0, instance:employeeApi_TestCases.TC005_Delete__EmpRecord@96532d6]" name="checkserverType" duration-ms="0" started-at="2019-07-22T09:49:09Z" finished-at="2019-07-22T09:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkserverType -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:employeeApi_TestCases.TC005_Delete__EmpRecord@96532d6]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-07-22T09:49:09Z" finished-at="2019-07-22T09:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- employeeApi_TestCases.TC005_Delete__EmpRecord -->
      <class name="employeeApi_TestCases.TC003_Post_EmpRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:employeeApi_TestCases.TC003_Post_EmpRecord@2acf57e3]" name="setup" is-config="true" duration-ms="3" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmp()[pri:0, instance:employeeApi_TestCases.TC003_Post_EmpRecord@2acf57e3]" name="createEmp" is-config="true" duration-ms="5758" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmp -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:employeeApi_TestCases.TC003_Post_EmpRecord@2acf57e3]" name="checkContentType" duration-ms="1" started-at="2019-07-22T09:49:01Z" finished-at="2019-07-22T09:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:employeeApi_TestCases.TC003_Post_EmpRecord@2acf57e3]" name="checkResponseBody" duration-ms="1" started-at="2019-07-22T09:49:01Z" finished-at="2019-07-22T09:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:employeeApi_TestCases.TC003_Post_EmpRecord@2acf57e3]" name="checkStatusCode" duration-ms="0" started-at="2019-07-22T09:49:01Z" finished-at="2019-07-22T09:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkserverType()[pri:0, instance:employeeApi_TestCases.TC003_Post_EmpRecord@2acf57e3]" name="checkserverType" duration-ms="0" started-at="2019-07-22T09:49:01Z" finished-at="2019-07-22T09:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkserverType -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:employeeApi_TestCases.TC003_Post_EmpRecord@2acf57e3]" name="tearDown" is-config="true" duration-ms="2" started-at="2019-07-22T09:49:01Z" finished-at="2019-07-22T09:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- employeeApi_TestCases.TC003_Post_EmpRecord -->
      <class name="employeeApi_TestCases.TC001_Get_All_Employee">
        <test-method status="PASS" signature="setup()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="setup" is-config="true" duration-ms="47" started-at="2019-07-22T09:48:51Z" finished-at="2019-07-22T09:48:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="getAllEmployees" is-config="true" duration-ms="3373" started-at="2019-07-22T09:48:51Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkContentType" duration-ms="3" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkCookies" duration-ms="1" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkResponseBody" duration-ms="25" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkResponseTime" duration-ms="2" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkStatusCode" duration-ms="1" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkcontentencoding()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkcontentencoding" duration-ms="1" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkcontentencoding -->
        <test-method status="PASS" signature="checkserverType()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkserverType" duration-ms="1" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkserverType -->
        <test-method status="PASS" signature="checkstatusLine()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="checkstatusLine" duration-ms="2" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkstatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:employeeApi_TestCases.TC001_Get_All_Employee@2d6e8792]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- employeeApi_TestCases.TC001_Get_All_Employee -->
      <class name="employeeApi_TestCases.TC004_Put_EmpRecord">
        <test-method status="PASS" signature="setup()[pri:0, instance:employeeApi_TestCases.TC004_Put_EmpRecord@506e6d5e]" name="setup" is-config="true" duration-ms="7" started-at="2019-07-22T09:49:01Z" finished-at="2019-07-22T09:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="updateEmp()[pri:0, instance:employeeApi_TestCases.TC004_Put_EmpRecord@506e6d5e]" name="updateEmp" is-config="true" duration-ms="5816" started-at="2019-07-22T09:49:01Z" finished-at="2019-07-22T09:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmp -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:employeeApi_TestCases.TC004_Put_EmpRecord@506e6d5e]" name="checkContentType" duration-ms="1" started-at="2019-07-22T09:49:07Z" finished-at="2019-07-22T09:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:employeeApi_TestCases.TC004_Put_EmpRecord@506e6d5e]" name="checkResponseBody" duration-ms="1" started-at="2019-07-22T09:49:07Z" finished-at="2019-07-22T09:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:employeeApi_TestCases.TC004_Put_EmpRecord@506e6d5e]" name="checkStatusCode" duration-ms="0" started-at="2019-07-22T09:49:07Z" finished-at="2019-07-22T09:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkserverType()[pri:0, instance:employeeApi_TestCases.TC004_Put_EmpRecord@506e6d5e]" name="checkserverType" duration-ms="0" started-at="2019-07-22T09:49:07Z" finished-at="2019-07-22T09:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkserverType -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:employeeApi_TestCases.TC004_Put_EmpRecord@506e6d5e]" name="tearDown" is-config="true" duration-ms="1" started-at="2019-07-22T09:49:07Z" finished-at="2019-07-22T09:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- employeeApi_TestCases.TC004_Put_EmpRecord -->
      <class name="employeeApi_TestCases.TC002_Get_Single_Empdata">
        <test-method status="PASS" signature="setup()[pri:0, instance:employeeApi_TestCases.TC002_Get_Single_Empdata@2812cbfa]" name="setup" is-config="true" duration-ms="5" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getsingleEmployees()[pri:0, instance:employeeApi_TestCases.TC002_Get_Single_Empdata@2812cbfa]" name="getsingleEmployees" is-config="true" duration-ms="733" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getsingleEmployees -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:employeeApi_TestCases.TC002_Get_Single_Empdata@2812cbfa]" name="checkResponseBody" duration-ms="3" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at employeeApi_TestCases.TC002_Get_Single_Empdata.checkResponseBody(TC002_Get_Single_Empdata.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:employeeApi_TestCases.TC002_Get_Single_Empdata@2812cbfa]" name="checkResponseTime" duration-ms="0" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:employeeApi_TestCases.TC002_Get_Single_Empdata@2812cbfa]" name="checkStatusCode" duration-ms="0" started-at="2019-07-22T09:48:55Z" finished-at="2019-07-22T09:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
      </class> <!-- employeeApi_TestCases.TC002_Get_Single_Empdata -->
    </test> <!-- EmpRestAssuretTEst -->
  </suite> <!-- restassuredtestsuite -->
</testng-results>
